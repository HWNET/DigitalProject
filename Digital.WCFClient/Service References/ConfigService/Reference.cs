//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Digital.WCFClient.ConfigService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MenuModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class MenuModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuName {
            get {
                return this.MenuNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuNameField, value) != true)) {
                    this.MenuNameField = value;
                    this.RaisePropertyChanged("MenuName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherName {
            get {
                return this.OtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherNameField, value) != true)) {
                    this.OtherNameField = value;
                    this.RaisePropertyChanged("OtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Style {
            get {
                return this.StyleField;
            }
            set {
                if ((object.ReferenceEquals(this.StyleField, value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class UsersModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.IdeaModel> IdeaModelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegisterDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UsersInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Digital.WCFClient.ConfigService.UsersInfoModel UsersInfoModelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.IdeaModel> IdeaModelList {
            get {
                return this.IdeaModelListField;
            }
            set {
                if ((object.ReferenceEquals(this.IdeaModelListField, value) != true)) {
                    this.IdeaModelListField = value;
                    this.RaisePropertyChanged("IdeaModelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginTime {
            get {
                return this.LastLoginTimeField;
            }
            set {
                if ((this.LastLoginTimeField.Equals(value) != true)) {
                    this.LastLoginTimeField = value;
                    this.RaisePropertyChanged("LastLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginIP {
            get {
                return this.LoginIPField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIPField, value) != true)) {
                    this.LoginIPField = value;
                    this.RaisePropertyChanged("LoginIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passwords {
            get {
                return this.PasswordsField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordsField, value) != true)) {
                    this.PasswordsField = value;
                    this.RaisePropertyChanged("Passwords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisterDate {
            get {
                return this.RegisterDateField;
            }
            set {
                if ((this.RegisterDateField.Equals(value) != true)) {
                    this.RegisterDateField = value;
                    this.RaisePropertyChanged("RegisterDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTypeID {
            get {
                return this.UserTypeIDField;
            }
            set {
                if ((this.UserTypeIDField.Equals(value) != true)) {
                    this.UserTypeIDField = value;
                    this.RaisePropertyChanged("UserTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UsersInfoID {
            get {
                return this.UsersInfoIDField;
            }
            set {
                if ((this.UsersInfoIDField.Equals(value) != true)) {
                    this.UsersInfoIDField = value;
                    this.RaisePropertyChanged("UsersInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Digital.WCFClient.ConfigService.UsersInfoModel UsersInfoModel {
            get {
                return this.UsersInfoModelField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersInfoModelField, value) != true)) {
                    this.UsersInfoModelField = value;
                    this.RaisePropertyChanged("UsersInfoModel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersInfoModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class UsersInfoModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeGoodAtIntroductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Digital.WCFClient.ConfigService.CityModel CityModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodAtWhatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.GoodAtWhatModel> GoodAtWhatModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProvinceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsersInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeGoodAtIntroduction {
            get {
                return this.BeGoodAtIntroductionField;
            }
            set {
                if ((object.ReferenceEquals(this.BeGoodAtIntroductionField, value) != true)) {
                    this.BeGoodAtIntroductionField = value;
                    this.RaisePropertyChanged("BeGoodAtIntroduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Digital.WCFClient.ConfigService.CityModel CityModels {
            get {
                return this.CityModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.CityModelsField, value) != true)) {
                    this.CityModelsField = value;
                    this.RaisePropertyChanged("CityModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayPicture {
            get {
                return this.DisplayPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayPictureField, value) != true)) {
                    this.DisplayPictureField = value;
                    this.RaisePropertyChanged("DisplayPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodAtWhatID {
            get {
                return this.GoodAtWhatIDField;
            }
            set {
                if ((this.GoodAtWhatIDField.Equals(value) != true)) {
                    this.GoodAtWhatIDField = value;
                    this.RaisePropertyChanged("GoodAtWhatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.GoodAtWhatModel> GoodAtWhatModels {
            get {
                return this.GoodAtWhatModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodAtWhatModelsField, value) != true)) {
                    this.GoodAtWhatModelsField = value;
                    this.RaisePropertyChanged("GoodAtWhatModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProvinceID {
            get {
                return this.ProvinceIDField;
            }
            set {
                if ((this.ProvinceIDField.Equals(value) != true)) {
                    this.ProvinceIDField = value;
                    this.RaisePropertyChanged("ProvinceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QQ {
            get {
                return this.QQField;
            }
            set {
                if ((object.ReferenceEquals(this.QQField, value) != true)) {
                    this.QQField = value;
                    this.RaisePropertyChanged("QQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrueName {
            get {
                return this.TrueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueNameField, value) != true)) {
                    this.TrueNameField = value;
                    this.RaisePropertyChanged("TrueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsersInfoID {
            get {
                return this.UsersInfoIDField;
            }
            set {
                if ((this.UsersInfoIDField.Equals(value) != true)) {
                    this.UsersInfoIDField = value;
                    this.RaisePropertyChanged("UsersInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdeaModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class IdeaModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CityModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodAtWhatModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class GoodAtWhatModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodAtWhatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkillIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Digital.WCFClient.ConfigService.SkillsModel SkillsModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsersInfoIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodAtWhatID {
            get {
                return this.GoodAtWhatIDField;
            }
            set {
                if ((this.GoodAtWhatIDField.Equals(value) != true)) {
                    this.GoodAtWhatIDField = value;
                    this.RaisePropertyChanged("GoodAtWhatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((this.SkillIdField.Equals(value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Digital.WCFClient.ConfigService.SkillsModel SkillsModel {
            get {
                return this.SkillsModelField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillsModelField, value) != true)) {
                    this.SkillsModelField = value;
                    this.RaisePropertyChanged("SkillsModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsersInfoID {
            get {
                return this.UsersInfoIDField;
            }
            set {
                if ((this.UsersInfoIDField.Equals(value) != true)) {
                    this.UsersInfoIDField = value;
                    this.RaisePropertyChanged("UsersInfoID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillsModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class SkillsModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkillIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((this.SkillIdField.Equals(value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CompanyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnualBusinessVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnualExportsVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapacityIntroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CasesCategoryModel> CasesCategoryModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyBankAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyBankDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyBusinessAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyBusinessModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCorporateRepresentativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIntroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyMembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyRegisteredAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyRegisteredAssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyRegisteredNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyTypeNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyWebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyYearEstablishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.DepartmentModel> DepartmentModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentIntroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoryAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProvideOEMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementSystemCertificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.NewsCategoryModel> NewsCategoryModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PatentModel> PatentModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryEquipmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimarySalesAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessingCraftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessingMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductQualityCertificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductionFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityAssuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResearchDepartMembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicesDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.SinglePageModel> SinglePageModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnnualBusinessVolume {
            get {
                return this.AnnualBusinessVolumeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnualBusinessVolumeField, value) != true)) {
                    this.AnnualBusinessVolumeField = value;
                    this.RaisePropertyChanged("AnnualBusinessVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnnualExportsVolume {
            get {
                return this.AnnualExportsVolumeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnualExportsVolumeField, value) != true)) {
                    this.AnnualExportsVolumeField = value;
                    this.RaisePropertyChanged("AnnualExportsVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapacityIntro {
            get {
                return this.CapacityIntroField;
            }
            set {
                if ((object.ReferenceEquals(this.CapacityIntroField, value) != true)) {
                    this.CapacityIntroField = value;
                    this.RaisePropertyChanged("CapacityIntro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CasesCategoryModel> CasesCategoryModels {
            get {
                return this.CasesCategoryModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesCategoryModelsField, value) != true)) {
                    this.CasesCategoryModelsField = value;
                    this.RaisePropertyChanged("CasesCategoryModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyBankAccount {
            get {
                return this.CompanyBankAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyBankAccountField, value) != true)) {
                    this.CompanyBankAccountField = value;
                    this.RaisePropertyChanged("CompanyBankAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyBankDeposit {
            get {
                return this.CompanyBankDepositField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyBankDepositField, value) != true)) {
                    this.CompanyBankDepositField = value;
                    this.RaisePropertyChanged("CompanyBankDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyBusinessAddress {
            get {
                return this.CompanyBusinessAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyBusinessAddressField, value) != true)) {
                    this.CompanyBusinessAddressField = value;
                    this.RaisePropertyChanged("CompanyBusinessAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyBusinessModel {
            get {
                return this.CompanyBusinessModelField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyBusinessModelField, value) != true)) {
                    this.CompanyBusinessModelField = value;
                    this.RaisePropertyChanged("CompanyBusinessModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCorporateRepresentative {
            get {
                return this.CompanyCorporateRepresentativeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCorporateRepresentativeField, value) != true)) {
                    this.CompanyCorporateRepresentativeField = value;
                    this.RaisePropertyChanged("CompanyCorporateRepresentative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyIntro {
            get {
                return this.CompanyIntroField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIntroField, value) != true)) {
                    this.CompanyIntroField = value;
                    this.RaisePropertyChanged("CompanyIntro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyMembers {
            get {
                return this.CompanyMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyMembersField, value) != true)) {
                    this.CompanyMembersField = value;
                    this.RaisePropertyChanged("CompanyMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyRegisteredAddress {
            get {
                return this.CompanyRegisteredAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyRegisteredAddressField, value) != true)) {
                    this.CompanyRegisteredAddressField = value;
                    this.RaisePropertyChanged("CompanyRegisteredAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyRegisteredAssets {
            get {
                return this.CompanyRegisteredAssetsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyRegisteredAssetsField, value) != true)) {
                    this.CompanyRegisteredAssetsField = value;
                    this.RaisePropertyChanged("CompanyRegisteredAssets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyRegisteredNO {
            get {
                return this.CompanyRegisteredNOField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyRegisteredNOField, value) != true)) {
                    this.CompanyRegisteredNOField = value;
                    this.RaisePropertyChanged("CompanyRegisteredNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyTypeNO {
            get {
                return this.CompanyTypeNOField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyTypeNOField, value) != true)) {
                    this.CompanyTypeNOField = value;
                    this.RaisePropertyChanged("CompanyTypeNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyWebsite {
            get {
                return this.CompanyWebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyWebsiteField, value) != true)) {
                    this.CompanyWebsiteField = value;
                    this.RaisePropertyChanged("CompanyWebsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyYearEstablished {
            get {
                return this.CompanyYearEstablishedField;
            }
            set {
                if ((this.CompanyYearEstablishedField.Equals(value) != true)) {
                    this.CompanyYearEstablishedField = value;
                    this.RaisePropertyChanged("CompanyYearEstablished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.DepartmentModel> DepartmentModels {
            get {
                return this.DepartmentModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentModelsField, value) != true)) {
                    this.DepartmentModelsField = value;
                    this.RaisePropertyChanged("DepartmentModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentIntro {
            get {
                return this.EquipmentIntroField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentIntroField, value) != true)) {
                    this.EquipmentIntroField = value;
                    this.RaisePropertyChanged("EquipmentIntro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoryArea {
            get {
                return this.FactoryAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoryAreaField, value) != true)) {
                    this.FactoryAreaField = value;
                    this.RaisePropertyChanged("FactoryArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProvideOEM {
            get {
                return this.IsProvideOEMField;
            }
            set {
                if ((this.IsProvideOEMField.Equals(value) != true)) {
                    this.IsProvideOEMField = value;
                    this.RaisePropertyChanged("IsProvideOEM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementSystemCertification {
            get {
                return this.ManagementSystemCertificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementSystemCertificationField, value) != true)) {
                    this.ManagementSystemCertificationField = value;
                    this.RaisePropertyChanged("ManagementSystemCertification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.NewsCategoryModel> NewsCategoryModels {
            get {
                return this.NewsCategoryModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsCategoryModelsField, value) != true)) {
                    this.NewsCategoryModelsField = value;
                    this.RaisePropertyChanged("NewsCategoryModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PatentModel> PatentModels {
            get {
                return this.PatentModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentModelsField, value) != true)) {
                    this.PatentModelsField = value;
                    this.RaisePropertyChanged("PatentModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryBusiness {
            get {
                return this.PrimaryBusinessField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryBusinessField, value) != true)) {
                    this.PrimaryBusinessField = value;
                    this.RaisePropertyChanged("PrimaryBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEquipments {
            get {
                return this.PrimaryEquipmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEquipmentsField, value) != true)) {
                    this.PrimaryEquipmentsField = value;
                    this.RaisePropertyChanged("PrimaryEquipments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryProduct {
            get {
                return this.PrimaryProductField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryProductField, value) != true)) {
                    this.PrimaryProductField = value;
                    this.RaisePropertyChanged("PrimaryProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimarySalesArea {
            get {
                return this.PrimarySalesAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimarySalesAreaField, value) != true)) {
                    this.PrimarySalesAreaField = value;
                    this.RaisePropertyChanged("PrimarySalesArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessingCraft {
            get {
                return this.ProcessingCraftField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessingCraftField, value) != true)) {
                    this.ProcessingCraftField = value;
                    this.RaisePropertyChanged("ProcessingCraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessingMethod {
            get {
                return this.ProcessingMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessingMethodField, value) != true)) {
                    this.ProcessingMethodField = value;
                    this.RaisePropertyChanged("ProcessingMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductQualityCertification {
            get {
                return this.ProductQualityCertificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductQualityCertificationField, value) != true)) {
                    this.ProductQualityCertificationField = value;
                    this.RaisePropertyChanged("ProductQualityCertification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductionForm {
            get {
                return this.ProductionFormField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionFormField, value) != true)) {
                    this.ProductionFormField = value;
                    this.RaisePropertyChanged("ProductionForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityAssurance {
            get {
                return this.QualityAssuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityAssuranceField, value) != true)) {
                    this.QualityAssuranceField = value;
                    this.RaisePropertyChanged("QualityAssurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResearchDepartMembers {
            get {
                return this.ResearchDepartMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.ResearchDepartMembersField, value) != true)) {
                    this.ResearchDepartMembersField = value;
                    this.RaisePropertyChanged("ResearchDepartMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicesDomain {
            get {
                return this.ServicesDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesDomainField, value) != true)) {
                    this.ServicesDomainField = value;
                    this.RaisePropertyChanged("ServicesDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.SinglePageModel> SinglePageModels {
            get {
                return this.SinglePageModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.SinglePageModelsField, value) != true)) {
                    this.SinglePageModelsField = value;
                    this.RaisePropertyChanged("SinglePageModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasesCategoryModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CasesCategoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesCategoryContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasesCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasesCategoryOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasesCategoryParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesCategoryPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CasesModel> CasesModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesCategoryContent {
            get {
                return this.CasesCategoryContentField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesCategoryContentField, value) != true)) {
                    this.CasesCategoryContentField = value;
                    this.RaisePropertyChanged("CasesCategoryContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasesCategoryID {
            get {
                return this.CasesCategoryIDField;
            }
            set {
                if ((this.CasesCategoryIDField.Equals(value) != true)) {
                    this.CasesCategoryIDField = value;
                    this.RaisePropertyChanged("CasesCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesCategoryName {
            get {
                return this.CasesCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesCategoryNameField, value) != true)) {
                    this.CasesCategoryNameField = value;
                    this.RaisePropertyChanged("CasesCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasesCategoryOrderID {
            get {
                return this.CasesCategoryOrderIDField;
            }
            set {
                if ((this.CasesCategoryOrderIDField.Equals(value) != true)) {
                    this.CasesCategoryOrderIDField = value;
                    this.RaisePropertyChanged("CasesCategoryOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasesCategoryParentID {
            get {
                return this.CasesCategoryParentIDField;
            }
            set {
                if ((this.CasesCategoryParentIDField.Equals(value) != true)) {
                    this.CasesCategoryParentIDField = value;
                    this.RaisePropertyChanged("CasesCategoryParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesCategoryPicture {
            get {
                return this.CasesCategoryPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesCategoryPictureField, value) != true)) {
                    this.CasesCategoryPictureField = value;
                    this.RaisePropertyChanged("CasesCategoryPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CasesModel> CasesModels {
            get {
                return this.CasesModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesModelsField, value) != true)) {
                    this.CasesModelsField = value;
                    this.RaisePropertyChanged("CasesModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class DepartmentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsCategoryModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class NewsCategoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsCategoryContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsCategoryOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsCategoryParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsCategoryPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.NewsModel> NewsModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsCategoryContent {
            get {
                return this.NewsCategoryContentField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsCategoryContentField, value) != true)) {
                    this.NewsCategoryContentField = value;
                    this.RaisePropertyChanged("NewsCategoryContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsCategoryID {
            get {
                return this.NewsCategoryIDField;
            }
            set {
                if ((this.NewsCategoryIDField.Equals(value) != true)) {
                    this.NewsCategoryIDField = value;
                    this.RaisePropertyChanged("NewsCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsCategoryName {
            get {
                return this.NewsCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsCategoryNameField, value) != true)) {
                    this.NewsCategoryNameField = value;
                    this.RaisePropertyChanged("NewsCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsCategoryOrderID {
            get {
                return this.NewsCategoryOrderIDField;
            }
            set {
                if ((this.NewsCategoryOrderIDField.Equals(value) != true)) {
                    this.NewsCategoryOrderIDField = value;
                    this.RaisePropertyChanged("NewsCategoryOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsCategoryParentID {
            get {
                return this.NewsCategoryParentIDField;
            }
            set {
                if ((this.NewsCategoryParentIDField.Equals(value) != true)) {
                    this.NewsCategoryParentIDField = value;
                    this.RaisePropertyChanged("NewsCategoryParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsCategoryPicture {
            get {
                return this.NewsCategoryPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsCategoryPictureField, value) != true)) {
                    this.NewsCategoryPictureField = value;
                    this.RaisePropertyChanged("NewsCategoryPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.NewsModel> NewsModels {
            get {
                return this.NewsModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsModelsField, value) != true)) {
                    this.NewsModelsField = value;
                    this.RaisePropertyChanged("NewsModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatentModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class PatentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTransferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentAbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentCerificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentDevelopmentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentIntroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatentOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatentTechnologyDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTransferred {
            get {
                return this.IsTransferredField;
            }
            set {
                if ((this.IsTransferredField.Equals(value) != true)) {
                    this.IsTransferredField = value;
                    this.RaisePropertyChanged("IsTransferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentAbstract {
            get {
                return this.PatentAbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentAbstractField, value) != true)) {
                    this.PatentAbstractField = value;
                    this.RaisePropertyChanged("PatentAbstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentCerificate {
            get {
                return this.PatentCerificateField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentCerificateField, value) != true)) {
                    this.PatentCerificateField = value;
                    this.RaisePropertyChanged("PatentCerificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentDate {
            get {
                return this.PatentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentDateField, value) != true)) {
                    this.PatentDateField = value;
                    this.RaisePropertyChanged("PatentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentDevelopmentStatus {
            get {
                return this.PatentDevelopmentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentDevelopmentStatusField, value) != true)) {
                    this.PatentDevelopmentStatusField = value;
                    this.RaisePropertyChanged("PatentDevelopmentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatentID {
            get {
                return this.PatentIDField;
            }
            set {
                if ((this.PatentIDField.Equals(value) != true)) {
                    this.PatentIDField = value;
                    this.RaisePropertyChanged("PatentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentIntro {
            get {
                return this.PatentIntroField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentIntroField, value) != true)) {
                    this.PatentIntroField = value;
                    this.RaisePropertyChanged("PatentIntro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentLabels {
            get {
                return this.PatentLabelsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentLabelsField, value) != true)) {
                    this.PatentLabelsField = value;
                    this.RaisePropertyChanged("PatentLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentName {
            get {
                return this.PatentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentNameField, value) != true)) {
                    this.PatentNameField = value;
                    this.RaisePropertyChanged("PatentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentNumber {
            get {
                return this.PatentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentNumberField, value) != true)) {
                    this.PatentNumberField = value;
                    this.RaisePropertyChanged("PatentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatentOrderID {
            get {
                return this.PatentOrderIDField;
            }
            set {
                if ((this.PatentOrderIDField.Equals(value) != true)) {
                    this.PatentOrderIDField = value;
                    this.RaisePropertyChanged("PatentOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatentTechnologyDomain {
            get {
                return this.PatentTechnologyDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.PatentTechnologyDomainField, value) != true)) {
                    this.PatentTechnologyDomainField = value;
                    this.RaisePropertyChanged("PatentTechnologyDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SinglePageModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class SinglePageModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageKeyWordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageRelationFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedTime {
            get {
                return this.ModifiedTimeField;
            }
            set {
                if ((this.ModifiedTimeField.Equals(value) != true)) {
                    this.ModifiedTimeField = value;
                    this.RaisePropertyChanged("ModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageBody {
            get {
                return this.PageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.PageBodyField, value) != true)) {
                    this.PageBodyField = value;
                    this.RaisePropertyChanged("PageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageDescription {
            get {
                return this.PageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PageDescriptionField, value) != true)) {
                    this.PageDescriptionField = value;
                    this.RaisePropertyChanged("PageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageID {
            get {
                return this.PageIDField;
            }
            set {
                if ((this.PageIDField.Equals(value) != true)) {
                    this.PageIDField = value;
                    this.RaisePropertyChanged("PageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageKeyWords {
            get {
                return this.PageKeyWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageKeyWordsField, value) != true)) {
                    this.PageKeyWordsField = value;
                    this.RaisePropertyChanged("PageKeyWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageRelationFlag {
            get {
                return this.PageRelationFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.PageRelationFlagField, value) != true)) {
                    this.PageRelationFlagField = value;
                    this.RaisePropertyChanged("PageRelationFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageTitle {
            get {
                return this.PageTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PageTitleField, value) != true)) {
                    this.PageTitleField = value;
                    this.RaisePropertyChanged("PageTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasesModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CasesModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesAbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasesCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CasesDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesOrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasesThumbnailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesAbstract {
            get {
                return this.CasesAbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesAbstractField, value) != true)) {
                    this.CasesAbstractField = value;
                    this.RaisePropertyChanged("CasesAbstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasesCategoryID {
            get {
                return this.CasesCategoryIDField;
            }
            set {
                if ((this.CasesCategoryIDField.Equals(value) != true)) {
                    this.CasesCategoryIDField = value;
                    this.RaisePropertyChanged("CasesCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CasesDate {
            get {
                return this.CasesDateField;
            }
            set {
                if ((this.CasesDateField.Equals(value) != true)) {
                    this.CasesDateField = value;
                    this.RaisePropertyChanged("CasesDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesDetails {
            get {
                return this.CasesDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesDetailsField, value) != true)) {
                    this.CasesDetailsField = value;
                    this.RaisePropertyChanged("CasesDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasesID {
            get {
                return this.CasesIDField;
            }
            set {
                if ((this.CasesIDField.Equals(value) != true)) {
                    this.CasesIDField = value;
                    this.RaisePropertyChanged("CasesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesLabels {
            get {
                return this.CasesLabelsField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesLabelsField, value) != true)) {
                    this.CasesLabelsField = value;
                    this.RaisePropertyChanged("CasesLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesName {
            get {
                return this.CasesNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesNameField, value) != true)) {
                    this.CasesNameField = value;
                    this.RaisePropertyChanged("CasesName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesOrderBy {
            get {
                return this.CasesOrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesOrderByField, value) != true)) {
                    this.CasesOrderByField = value;
                    this.RaisePropertyChanged("CasesOrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasesThumbnail {
            get {
                return this.CasesThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.CasesThumbnailField, value) != true)) {
                    this.CasesThumbnailField = value;
                    this.RaisePropertyChanged("CasesThumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class NewsModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsAbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.NewsCommentModel> NewsCommentModelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsKeywordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsThumbnailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsAbstract {
            get {
                return this.NewsAbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsAbstractField, value) != true)) {
                    this.NewsAbstractField = value;
                    this.RaisePropertyChanged("NewsAbstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsBody {
            get {
                return this.NewsBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsBodyField, value) != true)) {
                    this.NewsBodyField = value;
                    this.RaisePropertyChanged("NewsBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsCategoryID {
            get {
                return this.NewsCategoryIDField;
            }
            set {
                if ((this.NewsCategoryIDField.Equals(value) != true)) {
                    this.NewsCategoryIDField = value;
                    this.RaisePropertyChanged("NewsCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.NewsCommentModel> NewsCommentModels {
            get {
                return this.NewsCommentModelsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsCommentModelsField, value) != true)) {
                    this.NewsCommentModelsField = value;
                    this.RaisePropertyChanged("NewsCommentModels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsKeywords {
            get {
                return this.NewsKeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsKeywordsField, value) != true)) {
                    this.NewsKeywordsField = value;
                    this.RaisePropertyChanged("NewsKeywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsLabels {
            get {
                return this.NewsLabelsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsLabelsField, value) != true)) {
                    this.NewsLabelsField = value;
                    this.RaisePropertyChanged("NewsLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsOrderID {
            get {
                return this.NewsOrderIDField;
            }
            set {
                if ((this.NewsOrderIDField.Equals(value) != true)) {
                    this.NewsOrderIDField = value;
                    this.RaisePropertyChanged("NewsOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsThumbnail {
            get {
                return this.NewsThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsThumbnailField, value) != true)) {
                    this.NewsThumbnailField = value;
                    this.RaisePropertyChanged("NewsThumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseTime {
            get {
                return this.ReleaseTimeField;
            }
            set {
                if ((this.ReleaseTimeField.Equals(value) != true)) {
                    this.ReleaseTimeField = value;
                    this.RaisePropertyChanged("ReleaseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewsCount {
            get {
                return this.ViewsCountField;
            }
            set {
                if ((this.ViewsCountField.Equals(value) != true)) {
                    this.ViewsCountField = value;
                    this.RaisePropertyChanged("ViewsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsCommentModel", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class NewsCommentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentID {
            get {
                return this.CommentIDField;
            }
            set {
                if ((this.CommentIDField.Equals(value) != true)) {
                    this.CommentIDField = value;
                    this.RaisePropertyChanged("CommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserID {
            get {
                return this.ToUserIDField;
            }
            set {
                if ((this.ToUserIDField.Equals(value) != true)) {
                    this.ToUserIDField = value;
                    this.RaisePropertyChanged("ToUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyTypeMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CompanyTypeMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseNameValueMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.CompanyMemberMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.CompanyBusinessMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.PrimaryBusinessCategoryMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.PrimaryBusinessMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.PrimarySalesAreaMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.ProductionFormMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.ServicesDomainMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.ProcessingMethodMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.ProcessingCraftMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.EquipmentIntroMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.CapacityUnitMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.AnnualBusinessVolumeMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.AnnualExportsVolumeMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.ManagementSystemCertificationMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.ProductQualityCertificationMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.QualityAssuranceMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.CompanyYearEstablishedMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.CompanyRegisteredAssetsUnitMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Digital.WCFClient.ConfigService.CompanyTypeMode))]
    public partial class BaseNameValueMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyMemberMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CompanyMemberMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyBusinessMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CompanyBusinessMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimaryBusinessCategoryMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class PrimaryBusinessCategoryMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimaryBusinessMode> PrimaryBusinessListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimaryBusinessMode> PrimaryBusinessList {
            get {
                return this.PrimaryBusinessListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryBusinessListField, value) != true)) {
                    this.PrimaryBusinessListField = value;
                    this.RaisePropertyChanged("PrimaryBusinessList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimaryBusinessMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class PrimaryBusinessMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessCategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessCategoryName {
            get {
                return this.BusinessCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessCategoryNameField, value) != true)) {
                    this.BusinessCategoryNameField = value;
                    this.RaisePropertyChanged("BusinessCategoryName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimarySalesAreaMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class PrimarySalesAreaMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductionFormMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class ProductionFormMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicesDomainMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class ServicesDomainMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessingMethodMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class ProcessingMethodMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessingCraftMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class ProcessingCraftMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentIntroMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class EquipmentIntroMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CapacityUnitMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CapacityUnitMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnualBusinessVolumeMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class AnnualBusinessVolumeMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnualExportsVolumeMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class AnnualExportsVolumeMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagementSystemCertificationMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class ManagementSystemCertificationMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductQualityCertificationMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class ProductQualityCertificationMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QualityAssuranceMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class QualityAssuranceMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyYearEstablishedMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CompanyYearEstablishedMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyRegisteredAssetsUnitMode", Namespace="http://schemas.datacontract.org/2004/07/Digital.Contact.Models")]
    [System.SerializableAttribute()]
    public partial class CompanyRegisteredAssetsUnitMode : Digital.WCFClient.ConfigService.BaseNameValueMode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConfigService.IConfigService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IConfigService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigService/GetMenuList", ReplyAction="http://tempuri.org/IConfigService/GetMenuListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.MenuModel> GetMenuList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigService/GetMenuList", ReplyAction="http://tempuri.org/IConfigService/GetMenuListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.MenuModel>> GetMenuListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigServiceChannel : Digital.WCFClient.ConfigService.IConfigService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigServiceClient : System.ServiceModel.ClientBase<Digital.WCFClient.ConfigService.IConfigService>, Digital.WCFClient.ConfigService.IConfigService {
        
        public ConfigServiceClient() {
        }
        
        public ConfigServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.MenuModel> GetMenuList() {
            return base.Channel.GetMenuList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.MenuModel>> GetMenuListAsync() {
            return base.Channel.GetMenuListAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConfigService.IUserService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        Digital.WCFClient.ConfigService.UsersModel Login(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> LoginAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserInfo", ReplyAction="http://tempuri.org/IUserService/GetUserInfoResponse")]
        Digital.WCFClient.ConfigService.UsersModel GetUserInfo(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserInfo", ReplyAction="http://tempuri.org/IUserService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> GetUserInfoAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSkillList", ReplyAction="http://tempuri.org/IUserService/GetSkillListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.SkillsModel> GetSkillList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSkillList", ReplyAction="http://tempuri.org/IUserService/GetSkillListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.SkillsModel>> GetSkillListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUsersInfoModel", ReplyAction="http://tempuri.org/IUserService/UpdateUsersInfoModelResponse")]
        Digital.WCFClient.ConfigService.UsersInfoModel UpdateUsersInfoModel(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUsersInfoModel", ReplyAction="http://tempuri.org/IUserService/UpdateUsersInfoModelResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersInfoModel> UpdateUsersInfoModelAsync(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateGoodAtWhat", ReplyAction="http://tempuri.org/IUserService/UpdateGoodAtWhatResponse")]
        bool UpdateGoodAtWhat(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateGoodAtWhat", ReplyAction="http://tempuri.org/IUserService/UpdateGoodAtWhatResponse")]
        System.Threading.Tasks.Task<bool> UpdateGoodAtWhatAsync(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUsersModel", ReplyAction="http://tempuri.org/IUserService/UpdateUsersModelResponse")]
        Digital.WCFClient.ConfigService.UsersModel UpdateUsersModel(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUsersModel", ReplyAction="http://tempuri.org/IUserService/UpdateUsersModelResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> UpdateUsersModelAsync(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserInfoByName", ReplyAction="http://tempuri.org/IUserService/GetUserInfoByNameResponse")]
        Digital.WCFClient.ConfigService.UsersModel GetUserInfoByName(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserInfoByName", ReplyAction="http://tempuri.org/IUserService/GetUserInfoByNameResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> GetUserInfoByNameAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Register", ReplyAction="http://tempuri.org/IUserService/RegisterResponse")]
        bool Register(Digital.WCFClient.ConfigService.UsersModel UserModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Register", ReplyAction="http://tempuri.org/IUserService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(Digital.WCFClient.ConfigService.UsersModel UserModel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Digital.WCFClient.ConfigService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Digital.WCFClient.ConfigService.IUserService>, Digital.WCFClient.ConfigService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Digital.WCFClient.ConfigService.UsersModel Login(string UserName, string Password) {
            return base.Channel.Login(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> LoginAsync(string UserName, string Password) {
            return base.Channel.LoginAsync(UserName, Password);
        }
        
        public Digital.WCFClient.ConfigService.UsersModel GetUserInfo(int UserId) {
            return base.Channel.GetUserInfo(UserId);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> GetUserInfoAsync(int UserId) {
            return base.Channel.GetUserInfoAsync(UserId);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.SkillsModel> GetSkillList() {
            return base.Channel.GetSkillList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.SkillsModel>> GetSkillListAsync() {
            return base.Channel.GetSkillListAsync();
        }
        
        public Digital.WCFClient.ConfigService.UsersInfoModel UpdateUsersInfoModel(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.UpdateUsersInfoModel(UserModel);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersInfoModel> UpdateUsersInfoModelAsync(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.UpdateUsersInfoModelAsync(UserModel);
        }
        
        public bool UpdateGoodAtWhat(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.UpdateGoodAtWhat(UserModel);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGoodAtWhatAsync(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.UpdateGoodAtWhatAsync(UserModel);
        }
        
        public Digital.WCFClient.ConfigService.UsersModel UpdateUsersModel(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.UpdateUsersModel(UserModel);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> UpdateUsersModelAsync(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.UpdateUsersModelAsync(UserModel);
        }
        
        public Digital.WCFClient.ConfigService.UsersModel GetUserInfoByName(string UserName) {
            return base.Channel.GetUserInfoByName(UserName);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.UsersModel> GetUserInfoByNameAsync(string UserName) {
            return base.Channel.GetUserInfoByNameAsync(UserName);
        }
        
        public bool Register(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.Register(UserModel);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(Digital.WCFClient.ConfigService.UsersModel UserModel) {
            return base.Channel.RegisterAsync(UserModel);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConfigService.ICompanyService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICompanyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyInsert", ReplyAction="http://tempuri.org/ICompanyService/CompanyInsertResponse")]
        bool CompanyInsert(Digital.WCFClient.ConfigService.CompanyModel Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyInsert", ReplyAction="http://tempuri.org/ICompanyService/CompanyInsertResponse")]
        System.Threading.Tasks.Task<bool> CompanyInsertAsync(Digital.WCFClient.ConfigService.CompanyModel Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyUpdate", ReplyAction="http://tempuri.org/ICompanyService/CompanyUpdateResponse")]
        Digital.WCFClient.ConfigService.CompanyModel CompanyUpdate(Digital.WCFClient.ConfigService.CompanyModel Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyUpdate", ReplyAction="http://tempuri.org/ICompanyService/CompanyUpdateResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.CompanyModel> CompanyUpdateAsync(Digital.WCFClient.ConfigService.CompanyModel Model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyQueryById", ReplyAction="http://tempuri.org/ICompanyService/CompanyQueryByIdResponse")]
        Digital.WCFClient.ConfigService.CompanyModel CompanyQueryById(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyQueryById", ReplyAction="http://tempuri.org/ICompanyService/CompanyQueryByIdResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.CompanyModel> CompanyQueryByIdAsync(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyQueryByName", ReplyAction="http://tempuri.org/ICompanyService/CompanyQueryByNameResponse")]
        Digital.WCFClient.ConfigService.CompanyModel CompanyQueryByName(string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyQueryByName", ReplyAction="http://tempuri.org/ICompanyService/CompanyQueryByNameResponse")]
        System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.CompanyModel> CompanyQueryByNameAsync(string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyDeleteById", ReplyAction="http://tempuri.org/ICompanyService/CompanyDeleteByIdResponse")]
        bool CompanyDeleteById(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyDeleteById", ReplyAction="http://tempuri.org/ICompanyService/CompanyDeleteByIdResponse")]
        System.Threading.Tasks.Task<bool> CompanyDeleteByIdAsync(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyDisposeByNo", ReplyAction="http://tempuri.org/ICompanyService/CompanyDisposeByNoResponse")]
        bool CompanyDisposeByNo(string CompanyRegisteredNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyDisposeByNo", ReplyAction="http://tempuri.org/ICompanyService/CompanyDisposeByNoResponse")]
        System.Threading.Tasks.Task<bool> CompanyDisposeByNoAsync(string CompanyRegisteredNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyQueryList", ReplyAction="http://tempuri.org/ICompanyService/CompanyQueryListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyModel> CompanyQueryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CompanyQueryList", ReplyAction="http://tempuri.org/ICompanyService/CompanyQueryListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyModel>> CompanyQueryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyTypeList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyTypeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyTypeMode> GetCompanyTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyTypeList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyTypeListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyTypeMode>> GetCompanyTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyMemberList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyMemberListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyMemberMode> GetCompanyMemberList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyMemberList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyMemberListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyMemberMode>> GetCompanyMemberListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyBusinessList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyBusinessListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyBusinessMode> GetCompanyBusinessList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyBusinessList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyBusinessListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyBusinessMode>> GetCompanyBusinessListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPrimaryBusinessList", ReplyAction="http://tempuri.org/ICompanyService/GetPrimaryBusinessListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimaryBusinessCategoryMode> GetPrimaryBusinessList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPrimaryBusinessList", ReplyAction="http://tempuri.org/ICompanyService/GetPrimaryBusinessListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimaryBusinessCategoryMode>> GetPrimaryBusinessListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPrimarySalesAreaList", ReplyAction="http://tempuri.org/ICompanyService/GetPrimarySalesAreaListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimarySalesAreaMode> GetPrimarySalesAreaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPrimarySalesAreaList", ReplyAction="http://tempuri.org/ICompanyService/GetPrimarySalesAreaListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimarySalesAreaMode>> GetPrimarySalesAreaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProductionFormList", ReplyAction="http://tempuri.org/ICompanyService/GetProductionFormListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductionFormMode> GetProductionFormList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProductionFormList", ReplyAction="http://tempuri.org/ICompanyService/GetProductionFormListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductionFormMode>> GetProductionFormListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetServicesDomainList", ReplyAction="http://tempuri.org/ICompanyService/GetServicesDomainListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ServicesDomainMode> GetServicesDomainList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetServicesDomainList", ReplyAction="http://tempuri.org/ICompanyService/GetServicesDomainListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ServicesDomainMode>> GetServicesDomainListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProcessingMethodList", ReplyAction="http://tempuri.org/ICompanyService/GetProcessingMethodListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingMethodMode> GetProcessingMethodList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProcessingMethodList", ReplyAction="http://tempuri.org/ICompanyService/GetProcessingMethodListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingMethodMode>> GetProcessingMethodListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProcessingCraftList", ReplyAction="http://tempuri.org/ICompanyService/GetProcessingCraftListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingCraftMode> GetProcessingCraftList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProcessingCraftList", ReplyAction="http://tempuri.org/ICompanyService/GetProcessingCraftListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingCraftMode>> GetProcessingCraftListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetEquipmentIntroList", ReplyAction="http://tempuri.org/ICompanyService/GetEquipmentIntroListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.EquipmentIntroMode> GetEquipmentIntroList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetEquipmentIntroList", ReplyAction="http://tempuri.org/ICompanyService/GetEquipmentIntroListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.EquipmentIntroMode>> GetEquipmentIntroListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCapacityUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetCapacityUnitListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CapacityUnitMode> GetCapacityUnitList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCapacityUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetCapacityUnitListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CapacityUnitMode>> GetCapacityUnitListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAnnualBusinessVolumeList", ReplyAction="http://tempuri.org/ICompanyService/GetAnnualBusinessVolumeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualBusinessVolumeMode> GetAnnualBusinessVolumeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAnnualBusinessVolumeList", ReplyAction="http://tempuri.org/ICompanyService/GetAnnualBusinessVolumeListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualBusinessVolumeMode>> GetAnnualBusinessVolumeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAnnualExportsVolumeList", ReplyAction="http://tempuri.org/ICompanyService/GetAnnualExportsVolumeListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualExportsVolumeMode> GetAnnualExportsVolumeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAnnualExportsVolumeList", ReplyAction="http://tempuri.org/ICompanyService/GetAnnualExportsVolumeListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualExportsVolumeMode>> GetAnnualExportsVolumeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetManagementSystemCertificationList", ReplyAction="http://tempuri.org/ICompanyService/GetManagementSystemCertificationListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ManagementSystemCertificationMode> GetManagementSystemCertificationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetManagementSystemCertificationList", ReplyAction="http://tempuri.org/ICompanyService/GetManagementSystemCertificationListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ManagementSystemCertificationMode>> GetManagementSystemCertificationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProductQualityCertificationList", ReplyAction="http://tempuri.org/ICompanyService/GetProductQualityCertificationListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductQualityCertificationMode> GetProductQualityCertificationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetProductQualityCertificationList", ReplyAction="http://tempuri.org/ICompanyService/GetProductQualityCertificationListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductQualityCertificationMode>> GetProductQualityCertificationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetQualityAssuranceList", ReplyAction="http://tempuri.org/ICompanyService/GetQualityAssuranceListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.QualityAssuranceMode> GetQualityAssuranceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetQualityAssuranceList", ReplyAction="http://tempuri.org/ICompanyService/GetQualityAssuranceListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.QualityAssuranceMode>> GetQualityAssuranceListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyYearEstablishedList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyYearEstablishedListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyYearEstablishedMode> GetCompanyYearEstablishedList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyYearEstablishedList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyYearEstablishedListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyYearEstablishedMode>> GetCompanyYearEstablishedListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyRegisteredAssetsUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyRegisteredAssetsUnitListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyRegisteredAssetsUnitMode> GetCompanyRegisteredAssetsUnitList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyRegisteredAssetsUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyRegisteredAssetsUnitListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyRegisteredAssetsUnitMode>> GetCompanyRegisteredAssetsUnitListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyServiceChannel : Digital.WCFClient.ConfigService.ICompanyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyServiceClient : System.ServiceModel.ClientBase<Digital.WCFClient.ConfigService.ICompanyService>, Digital.WCFClient.ConfigService.ICompanyService {
        
        public CompanyServiceClient() {
        }
        
        public CompanyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CompanyInsert(Digital.WCFClient.ConfigService.CompanyModel Model) {
            return base.Channel.CompanyInsert(Model);
        }
        
        public System.Threading.Tasks.Task<bool> CompanyInsertAsync(Digital.WCFClient.ConfigService.CompanyModel Model) {
            return base.Channel.CompanyInsertAsync(Model);
        }
        
        public Digital.WCFClient.ConfigService.CompanyModel CompanyUpdate(Digital.WCFClient.ConfigService.CompanyModel Model) {
            return base.Channel.CompanyUpdate(Model);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.CompanyModel> CompanyUpdateAsync(Digital.WCFClient.ConfigService.CompanyModel Model) {
            return base.Channel.CompanyUpdateAsync(Model);
        }
        
        public Digital.WCFClient.ConfigService.CompanyModel CompanyQueryById(int CompanyId) {
            return base.Channel.CompanyQueryById(CompanyId);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.CompanyModel> CompanyQueryByIdAsync(int CompanyId) {
            return base.Channel.CompanyQueryByIdAsync(CompanyId);
        }
        
        public Digital.WCFClient.ConfigService.CompanyModel CompanyQueryByName(string CompanyName) {
            return base.Channel.CompanyQueryByName(CompanyName);
        }
        
        public System.Threading.Tasks.Task<Digital.WCFClient.ConfigService.CompanyModel> CompanyQueryByNameAsync(string CompanyName) {
            return base.Channel.CompanyQueryByNameAsync(CompanyName);
        }
        
        public bool CompanyDeleteById(int CompanyId) {
            return base.Channel.CompanyDeleteById(CompanyId);
        }
        
        public System.Threading.Tasks.Task<bool> CompanyDeleteByIdAsync(int CompanyId) {
            return base.Channel.CompanyDeleteByIdAsync(CompanyId);
        }
        
        public bool CompanyDisposeByNo(string CompanyRegisteredNO) {
            return base.Channel.CompanyDisposeByNo(CompanyRegisteredNO);
        }
        
        public System.Threading.Tasks.Task<bool> CompanyDisposeByNoAsync(string CompanyRegisteredNO) {
            return base.Channel.CompanyDisposeByNoAsync(CompanyRegisteredNO);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyModel> CompanyQueryList() {
            return base.Channel.CompanyQueryList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyModel>> CompanyQueryListAsync() {
            return base.Channel.CompanyQueryListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyTypeMode> GetCompanyTypeList() {
            return base.Channel.GetCompanyTypeList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyTypeMode>> GetCompanyTypeListAsync() {
            return base.Channel.GetCompanyTypeListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyMemberMode> GetCompanyMemberList() {
            return base.Channel.GetCompanyMemberList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyMemberMode>> GetCompanyMemberListAsync() {
            return base.Channel.GetCompanyMemberListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyBusinessMode> GetCompanyBusinessList() {
            return base.Channel.GetCompanyBusinessList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyBusinessMode>> GetCompanyBusinessListAsync() {
            return base.Channel.GetCompanyBusinessListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimaryBusinessCategoryMode> GetPrimaryBusinessList() {
            return base.Channel.GetPrimaryBusinessList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimaryBusinessCategoryMode>> GetPrimaryBusinessListAsync() {
            return base.Channel.GetPrimaryBusinessListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimarySalesAreaMode> GetPrimarySalesAreaList() {
            return base.Channel.GetPrimarySalesAreaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.PrimarySalesAreaMode>> GetPrimarySalesAreaListAsync() {
            return base.Channel.GetPrimarySalesAreaListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductionFormMode> GetProductionFormList() {
            return base.Channel.GetProductionFormList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductionFormMode>> GetProductionFormListAsync() {
            return base.Channel.GetProductionFormListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ServicesDomainMode> GetServicesDomainList() {
            return base.Channel.GetServicesDomainList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ServicesDomainMode>> GetServicesDomainListAsync() {
            return base.Channel.GetServicesDomainListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingMethodMode> GetProcessingMethodList() {
            return base.Channel.GetProcessingMethodList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingMethodMode>> GetProcessingMethodListAsync() {
            return base.Channel.GetProcessingMethodListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingCraftMode> GetProcessingCraftList() {
            return base.Channel.GetProcessingCraftList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProcessingCraftMode>> GetProcessingCraftListAsync() {
            return base.Channel.GetProcessingCraftListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.EquipmentIntroMode> GetEquipmentIntroList() {
            return base.Channel.GetEquipmentIntroList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.EquipmentIntroMode>> GetEquipmentIntroListAsync() {
            return base.Channel.GetEquipmentIntroListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CapacityUnitMode> GetCapacityUnitList() {
            return base.Channel.GetCapacityUnitList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CapacityUnitMode>> GetCapacityUnitListAsync() {
            return base.Channel.GetCapacityUnitListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualBusinessVolumeMode> GetAnnualBusinessVolumeList() {
            return base.Channel.GetAnnualBusinessVolumeList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualBusinessVolumeMode>> GetAnnualBusinessVolumeListAsync() {
            return base.Channel.GetAnnualBusinessVolumeListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualExportsVolumeMode> GetAnnualExportsVolumeList() {
            return base.Channel.GetAnnualExportsVolumeList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.AnnualExportsVolumeMode>> GetAnnualExportsVolumeListAsync() {
            return base.Channel.GetAnnualExportsVolumeListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ManagementSystemCertificationMode> GetManagementSystemCertificationList() {
            return base.Channel.GetManagementSystemCertificationList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ManagementSystemCertificationMode>> GetManagementSystemCertificationListAsync() {
            return base.Channel.GetManagementSystemCertificationListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductQualityCertificationMode> GetProductQualityCertificationList() {
            return base.Channel.GetProductQualityCertificationList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.ProductQualityCertificationMode>> GetProductQualityCertificationListAsync() {
            return base.Channel.GetProductQualityCertificationListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.QualityAssuranceMode> GetQualityAssuranceList() {
            return base.Channel.GetQualityAssuranceList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.QualityAssuranceMode>> GetQualityAssuranceListAsync() {
            return base.Channel.GetQualityAssuranceListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyYearEstablishedMode> GetCompanyYearEstablishedList() {
            return base.Channel.GetCompanyYearEstablishedList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyYearEstablishedMode>> GetCompanyYearEstablishedListAsync() {
            return base.Channel.GetCompanyYearEstablishedListAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyRegisteredAssetsUnitMode> GetCompanyRegisteredAssetsUnitList() {
            return base.Channel.GetCompanyRegisteredAssetsUnitList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Digital.WCFClient.ConfigService.CompanyRegisteredAssetsUnitMode>> GetCompanyRegisteredAssetsUnitListAsync() {
            return base.Channel.GetCompanyRegisteredAssetsUnitListAsync();
        }
    }
}
